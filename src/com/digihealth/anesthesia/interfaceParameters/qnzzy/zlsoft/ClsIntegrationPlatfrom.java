package com.digihealth.anesthesia.interfaceParameters.qnzzy.zlsoft;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2018-03-30T15:46:46.337+08:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "clsIntegrationPlatfrom", 
                  wsdlLocation = "http://192.128.0.120:8087/IntegrationPlatfrom.asmx?wsdl",
                  targetNamespace = "ZLSoft") 
public class ClsIntegrationPlatfrom extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("ZLSoft", "clsIntegrationPlatfrom");
    public final static QName ClsIntegrationPlatfromHttpPost = new QName("ZLSoft", "clsIntegrationPlatfromHttpPost");
    public final static QName ClsIntegrationPlatfromSoap = new QName("ZLSoft", "clsIntegrationPlatfromSoap");
    public final static QName ClsIntegrationPlatfromSoap12 = new QName("ZLSoft", "clsIntegrationPlatfromSoap12");
    public final static QName ClsIntegrationPlatfromHttpGet = new QName("ZLSoft", "clsIntegrationPlatfromHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("http://192.128.0.120:8087/IntegrationPlatfrom.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ClsIntegrationPlatfrom.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://192.128.0.120:8087/IntegrationPlatfrom.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ClsIntegrationPlatfrom(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ClsIntegrationPlatfrom(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClsIntegrationPlatfrom() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ClsIntegrationPlatfrom(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ClsIntegrationPlatfrom(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ClsIntegrationPlatfrom(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ClsIntegrationPlatfromHttpPost
     */
    @WebEndpoint(name = "clsIntegrationPlatfromHttpPost")
    public ClsIntegrationPlatfromHttpPost getClsIntegrationPlatfromHttpPost() {
        return super.getPort(ClsIntegrationPlatfromHttpPost, ClsIntegrationPlatfromHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClsIntegrationPlatfromHttpPost
     */
    @WebEndpoint(name = "clsIntegrationPlatfromHttpPost")
    public ClsIntegrationPlatfromHttpPost getClsIntegrationPlatfromHttpPost(WebServiceFeature... features) {
        return super.getPort(ClsIntegrationPlatfromHttpPost, ClsIntegrationPlatfromHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns ClsIntegrationPlatfromSoap
     */
    @WebEndpoint(name = "clsIntegrationPlatfromSoap")
    public ClsIntegrationPlatfromSoap getClsIntegrationPlatfromSoap() {
        return super.getPort(ClsIntegrationPlatfromSoap, ClsIntegrationPlatfromSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClsIntegrationPlatfromSoap
     */
    @WebEndpoint(name = "clsIntegrationPlatfromSoap")
    public ClsIntegrationPlatfromSoap getClsIntegrationPlatfromSoap(WebServiceFeature... features) {
        return super.getPort(ClsIntegrationPlatfromSoap, ClsIntegrationPlatfromSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ClsIntegrationPlatfromSoap
     */
    @WebEndpoint(name = "clsIntegrationPlatfromSoap12")
    public ClsIntegrationPlatfromSoap getClsIntegrationPlatfromSoap12() {
        return super.getPort(ClsIntegrationPlatfromSoap12, ClsIntegrationPlatfromSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClsIntegrationPlatfromSoap
     */
    @WebEndpoint(name = "clsIntegrationPlatfromSoap12")
    public ClsIntegrationPlatfromSoap getClsIntegrationPlatfromSoap12(WebServiceFeature... features) {
        return super.getPort(ClsIntegrationPlatfromSoap12, ClsIntegrationPlatfromSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ClsIntegrationPlatfromHttpGet
     */
    @WebEndpoint(name = "clsIntegrationPlatfromHttpGet")
    public ClsIntegrationPlatfromHttpGet getClsIntegrationPlatfromHttpGet() {
        return super.getPort(ClsIntegrationPlatfromHttpGet, ClsIntegrationPlatfromHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClsIntegrationPlatfromHttpGet
     */
    @WebEndpoint(name = "clsIntegrationPlatfromHttpGet")
    public ClsIntegrationPlatfromHttpGet getClsIntegrationPlatfromHttpGet(WebServiceFeature... features) {
        return super.getPort(ClsIntegrationPlatfromHttpGet, ClsIntegrationPlatfromHttpGet.class, features);
    }

}
